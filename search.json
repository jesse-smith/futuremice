[{"path":[]},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to futuremice","title":"Contributing to futuremice","text":"outlines propose change futuremice. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to futuremice","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to futuremice","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://jesse-smith.github.io/futuremice/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to futuremice","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jesse-smith/futuremice\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to futuremice","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://jesse-smith.github.io/futuremice/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to futuremice","text":"Please note futuremice project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://jesse-smith.github.io/futuremice/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Jesse Smith Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jesse-smith.github.io/futuremice/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with futuremice","title":"Getting help with futuremice","text":"Thanks using futuremice! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://jesse-smith.github.io/futuremice/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with futuremice","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://jesse-smith.github.io/futuremice/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with futuremice","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://jesse-smith.github.io/futuremice/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with futuremice","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://jesse-smith.github.io/futuremice/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jesse Smith. Author, maintainer.","code":""},{"path":"https://jesse-smith.github.io/futuremice/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith J (2022). futuremice: Future MICE. https://github.com/jesse-smith/futuremice, https://jesse-smith.github.io/futuremice/.","code":"@Manual{,   title = {futuremice: A Future for MICE},   author = {Jesse Smith},   year = {2022},   note = {https://github.com/jesse-smith/futuremice, https://jesse-smith.github.io/futuremice/}, }"},{"path":"https://jesse-smith.github.io/futuremice/index.html","id":"futuremice","dir":"","previous_headings":"","what":"A Future for MICE","title":"A Future for MICE","text":"futuremice parallelizes main functionality mice package using future furrr. enables use progress bar updates, well early stopping method save time spent unneeded iteration manual convergence checks (quality checks - still assess results ).","code":""},{"path":"https://jesse-smith.github.io/futuremice/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Future for MICE","text":"can install development version futuremice like :","code":"# You will need Rtools to install packages from Github on Windows # `devtools` with throw an informative error if Rtools is not found if (!\"devtools\" %in% installed.packages()) install.packages(\"devtools\") devtools::install_github(\"jesse-smith/futuremice\")"},{"path":"https://jesse-smith.github.io/futuremice/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A Future for MICE","text":"basic example shows solve common problem:","code":"library(futuremice)"},{"path":"https://jesse-smith.github.io/futuremice/index.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"A Future for MICE","text":"Please note futuremice project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_exit_msg.html","id":null,"dir":"Reference","previous_headings":"","what":"Throw Messages/Warnings at End of future_mice() Execution — fm_exit_msg","title":"Throw Messages/Warnings at End of future_mice() Execution — fm_exit_msg","text":"Throw Messages/Warnings End future_mice() Execution","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_exit_msg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Throw Messages/Warnings at End of future_mice() Execution — fm_exit_msg","text":"","code":"fm_exit_msg(i, rhat_lt, rhat_it, rhat_msg)"},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_exit_msg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Throw Messages/Warnings at End of future_mice() Execution — fm_exit_msg","text":"Integer(ish) representing iteration count rhat_lt Logical vector R-hat comparisons. length(rhat_lt) must less equal rhat_it. rhat_it Integer(ish) number iterations used R-hat comparison rhat_msg Contents message displaying R-hat values last rhat_it iterations","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_exit_msg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Throw Messages/Warnings at End of future_mice() Execution — fm_exit_msg","text":"NULL, invisibly","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mice.html","id":null,"dir":"Reference","previous_headings":"","what":"{furrr}-Friendly mice::mice() w/ Progress Updates — fm_mice","title":"{furrr}-Friendly mice::mice() w/ Progress Updates — fm_mice","text":"{furrr}-Friendly mice::mice() w/ Progress Updates","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"{furrr}-Friendly mice::mice() w/ Progress Updates — fm_mice","text":"","code":"fm_mice(.m, mice_args, progressor)"},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"{furrr}-Friendly mice::mice() w/ Progress Updates — fm_mice","text":".m Sink allows iteration w/ {purrr}-style map() functions. Unused. progressor progressor() {progressr} ... Arguments passed mice::mice. seed ignored.","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"{furrr}-Friendly mice::mice() w/ Progress Updates — fm_mice","text":"mids object (multiply imputed data set)","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mice_args.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Arguments in future_mice() — fm_mice_args","title":"Combine Arguments in future_mice() — fm_mice_args","text":"Helper function combine parse named arguments + dots future_mice()","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mice_args.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Arguments in future_mice() — fm_mice_args","text":"","code":"fm_mice_args(f_m, .args = caller_args(n = 2L))"},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mice_args.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Arguments in future_mice() — fm_mice_args","text":"f_m number chains per mice::mice() call .args named list arguments future_mice() call","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mice_args.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Arguments in future_mice() — fm_mice_args","text":"list containing arguments pass mice::mice()","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mids.html","id":null,"dir":"Reference","previous_headings":"","what":"{furrr}-Friendly mice::mice.mids() w/ Progress Updates — fm_mids","title":"{furrr}-Friendly mice::mice.mids() w/ Progress Updates — fm_mids","text":"{furrr}-Friendly mice::mice.mids() w/ Progress Updates","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"{furrr}-Friendly mice::mice.mids() w/ Progress Updates — fm_mids","text":"","code":"fm_mids(mids, mice_args, progressor)"},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"{furrr}-Friendly mice::mice.mids() w/ Progress Updates — fm_mids","text":"mids object class mids, typically produced previous call fm_mice() progressor progressor() {progressr} maxit number additional Gibbs sampling iterations","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_mids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"{furrr}-Friendly mice::mice.mids() w/ Progress Updates — fm_mids","text":"mids object (multiply imputed data set) additional iterations","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_set_colnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function for Setting Column Names — fm_set_colnames","title":"Helper Function for Setting Column Names — fm_set_colnames","text":"Helper Function Setting Column Names","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_set_colnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function for Setting Column Names — fm_set_colnames","text":"","code":"fm_set_colnames(x, names)"},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_set_colnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function for Setting Column Names — fm_set_colnames","text":"x object set column names . Must least 2 dimensions. names character vector column names","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/fm_set_colnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function for Setting Column Names — fm_set_colnames","text":"x, (re-)named columns","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/future_mice.html","id":null,"dir":"Reference","previous_headings":"","what":"Parallelize `mice::mice()`  Using {future} — future_mice","title":"Parallelize `mice::mice()`  Using {future} — future_mice","text":"future_mice() parallelizes chains Multivariate Imputation using Chained Equations (MICE) using {furrr} package create futures chains. Chains also assessed convergence using R-hat (potential scale reduction factor) statistic computed rstan::Rhat(); largest R-hat less rhat_thresh rhat_it iterations, function returns early (without completing maxit iterations). can save significant amount computation manual convergence checking. However, \"good\" R-hat substitute assessing imputation quality.","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/future_mice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parallelize `mice::mice()`  Using {future} — future_mice","text":"","code":"future_mice(   data,   m = 5L,   method = NULL,   predictorMatrix = NULL,   ignore = NULL,   where = NULL,   blocks = NULL,   visitSequence = NULL,   formulas = NULL,   blots = NULL,   post = NULL,   defaultMethod = c(\"pmm\", \"logreg\", \"polyreg\", \"polr\"),   maxit = 50L,   seed = NA,   data.init = NULL,   chunk_size = 1L,   rhat_thresh = 1.05,   rhat_it = 3L,   progressor = NULL,   ... )"},{"path":"https://jesse-smith.github.io/futuremice/reference/future_mice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parallelize `mice::mice()`  Using {future} — future_mice","text":"data data frame matrix containing incomplete data.  Missing values coded NA. m Number multiple imputations. default m=5. method Can either single string, vector strings length length(blocks), specifying imputation method used column data. specified single string, method used blocks. default imputation method (argument specified) depends measurement level target column, regulated defaultMethod argument. Columns need imputed empty method \"\". See details. predictorMatrix numeric matrix length(blocks) rows ncol(data) columns, containing 0/1 data specifying set predictors used target column. row corresponds variable block, .e., set variables imputed. value 1 means column variable used predictor target block (rows). default, predictorMatrix square matrix ncol(data) rows columns 1's, except diagonal. Note: two-level imputation models (\"2l\" names) codes (e.g, 2 -2) also allowed. ignore logical vector nrow(data) elements indicating rows ignored creating imputation model. default NULL includes rows observed value variable imputed. Rows ignore set TRUE influence parameters imputation model, still imputed. may use ignore argument split data training set (imputation model built) test set (influence imputation model estimates). Note: Multivariate imputation methods, like mice.impute.jomoImpute() mice.impute.panImpute(), honour ignore argument. data frame matrix logicals dimensions data indicating data imputations created. default, = .na(data), specifies missing data imputed. argument may used overimpute observed data, skip imputations selected missing values. blocks List vectors variable names per block. List elements may named identify blocks. Variables within block imputed multivariate imputation method (see method argument). default variable placed block, effectively fully conditional specification (FCS) univariate models (variable--variable imputation). variables whose names appear blocks imputed. relevant columns matrix set FALSE variables block members. variable may appear multiple blocks. case, effectively re-imputed time visited. visitSequence vector block names arbitrary length, specifying sequence blocks imputed one iteration Gibbs sampler. block collection variables. variables members block imputed block visited. variable member multiple blocks re-imputed within iteration. default visitSequence = \"roman\" visits blocks (left right) order appear blocks. One may also use one following keywords: \"arabic\" (right left), \"monotone\" (ordered low high proportion missing data) \"revmonotone\" (reverse monotone). Special case: specify visitSequence = \"monotone\" maxit = 1, procedure edit predictorMatrix conform monotone pattern. Realize convergence one iteration guaranteed missing data pattern actually monotone. procedure check . formulas named list formula's, expressions can converted formula's .formula. List elements correspond blocks. block list element applies identified name, list names must correspond block names. formulas argument alternative predictorMatrix argument allows flexibility specifying imputation models, e.g., specifying interaction terms. blots named list alist's can used pass arguments lower level imputation function. entries element blots[[blockname]] passed function called block blockname. post vector strings length ncol(data) specifying expressions strings. string parsed executed within sampler() function post-process imputed values iterations. default vector empty strings, indicating post-processing. Multivariate (block) imputation methods ignore post parameter. defaultMethod vector length 4 containing default imputation methods 1) numeric data, 2) factor data 2 levels, 3) factor data > 2 unordered levels, 4) factor data > 2 ordered levels. default, method uses pmm, predictive mean matching (numeric data) logreg, logistic regression imputation (binary data, factor 2 levels) polyreg, polytomous regression imputation unordered categorical data (factor > 2 levels) polr, proportional odds model (ordered, > 2 levels). maxit scalar giving maximum number iterations. future_mice() use less maxit iterations convergence criteria met; , default maxit = 50, much larger {mice} default maxit = 5 large enough \"just work\" many situations without potentially running days end convergence achieved. seed Seed random number generation; either scalar integer, NA, NULL. seed used directly mice::mice(); instead, used generate separate RNG streams future using parallel-safe L'Ecuyer-CMRG algorithm. data.init data frame size type data, without missing data, used initialize imputations start iterative process.  default NULL implies starting imputation created simple random draw data. Note specification data.init start m Gibbs sampling streams imputation. chunk_size average number chains per future. Differs usual {future} parameter multiple chains (\"chunks\") evaluated single call mice::mice() integer 1 < <= chunk_size m %% == 0. rhat_thresh R-hat threshold used assess convergence. Convergence defined (tail(rhat, rhat_it) < rhat_thresh). rhat_it number iterations used assess convergence. Convergence defined (tail(rhat, rhat_it) < rhat_thresh). progressor optional progressor function signal progress updates. supplied, responsible ensuring number steps progressor consistent number iterations performed future_mice(). ... Arguments passed mice::mice printFlag TRUE, mice print history console. Use print=FALSE silent computation.","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/future_mice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parallelize `mice::mice()`  Using {future} — future_mice","text":"Returns S3 object class mids (multiply imputed data set)","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/future_mice.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Parallelize `mice::mice()`  Using {future} — future_mice","text":"MICE method creating multiple imputations (replacement values) multivariate missing data. method based Fully Conditional Specification (FCS), incomplete varaible imputed separate model. MICE algorithm can impute mixes continuous, binary, unordered categorical ordered categorical data. addition, MICE can impute continuous two-level data maintain consistency imputations means passive imputation post-processing. Many diagnostic plots implemented inspect quality imputations. See mice::mice() function vignettes {mice} package website details. future_mice() mimics mice::mice() interface closely possible; however, shared parameters different defaults {mice} equivalents. Notably, default maxit much larger {mice}; maxit upper bound future_mice(), rather exact number iterations, mice(). default 100 enough iterations problems; need 100 iterations convergence, may want check imputation model circularity stability issues. Additionally, future_mice() provides NULL defaults unset arguments; best practice R. , passing NULL argument without explicit default passing argument, differs behavior mice() instances. Finally, output attributes identical equivalents mice(). particular, call attribute contains call future_mice(), rather call mice(). lastSeedValue equivalent, function identically subsequent calls mice.mids() future_mids().","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/ibindlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine a List of mids Objects — ibindlist","title":"Combine a List of mids Objects — ibindlist","text":"Combines list mids objects single mids object. resulting number imputed data sets equal sum number imputed data sets list element.","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/ibindlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine a List of mids Objects — ibindlist","text":"","code":"ibindlist(mids_list, call = NULL, seed = NULL, last_seed_value = NULL)"},{"path":"https://jesse-smith.github.io/futuremice/reference/ibindlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine a List of mids Objects — ibindlist","text":"mids_list List mids objects combine call optional call use call attribute resulting mids object. default uses call mids_list[[1]]$call. seed optional integer set seed attribute resulting mids object. last_seed_value optional .Random.seed value set lastSeedValue attribute resulting mids object","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/ibindlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine a List of mids Objects — ibindlist","text":"combined mids object","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/ibindlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combine a List of mids Objects — ibindlist","text":"call seed arguments primarily used future_mice() future_mids(); allow modification mids object match equivalent mice::mice() output exactly.","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/rhat_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick Max R-hat Calculation — rhat_max","title":"Quick Max R-hat Calculation — rhat_max","text":"Calculates largest R-hat statistic across variables chain statistics recent iteration","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/rhat_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick Max R-hat Calculation — rhat_max","text":"","code":"rhat_max(data)"},{"path":"https://jesse-smith.github.io/futuremice/reference/rhat_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick Max R-hat Calculation — rhat_max","text":"data object class mids created mice::mice()","code":""},{"path":"https://jesse-smith.github.io/futuremice/reference/rhat_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick Max R-hat Calculation — rhat_max","text":"legnth 1 double containing maximum R-hat statistic","code":""}]
